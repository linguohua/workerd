From bd4d056f6fa0e13b3efa7d15b6502712564c0f2e Mon Sep 17 00:00:00 2001
From: lghchinaidea <lghchinaidea@gmail.com>
Date: Sun, 12 May 2024 16:47:05 +0800
Subject: [PATCH] armeabi-v7a build: miss typename prior to 'Adapter::node_t'

---
 src/compiler/backend/ia32/instruction-selector-ia32.cc | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/compiler/backend/ia32/instruction-selector-ia32.cc b/src/compiler/backend/ia32/instruction-selector-ia32.cc
index 116943fbfd9..7673a99b129 100644
--- a/src/compiler/backend/ia32/instruction-selector-ia32.cc
+++ b/src/compiler/backend/ia32/instruction-selector-ia32.cc
@@ -1161,7 +1161,7 @@ template <typename Adapter>
 void VisitAtomicExchange(InstructionSelectorT<Adapter>* selector,
                          typename Adapter::node_t node, ArchOpcode opcode,
                          MachineRepresentation rep) {
-  using node_t = Adapter::node_t;
+  using node_t = typename Adapter::node_t;
   IA32OperandGeneratorT<Adapter> g(selector);
   node_t base = selector->input_at(node, 0);
   node_t index = selector->input_at(node, 1);
@@ -1732,7 +1732,7 @@ template <typename Adapter>
 void VisitWord32PairShift(InstructionSelectorT<Adapter>* selector,
                           InstructionCode opcode,
                           typename Adapter::node_t node) {
-  using node_t = Adapter::node_t;
+  using node_t = typename Adapter::node_t;
   IA32OperandGeneratorT<Adapter> g(selector);

   node_t shift = selector->input_at(node, 2);
@@ -2507,7 +2507,7 @@ template <typename Adapter>
 void VisitAtomicBinOp(InstructionSelectorT<Adapter>* selector,
                       typename Adapter::node_t node, ArchOpcode opcode,
                       MachineRepresentation rep) {
-  using node_t = Adapter::node_t;
+  using node_t = typename Adapter::node_t;
   AddressingMode addressing_mode;
   IA32OperandGeneratorT<Adapter> g(selector);
   node_t base = selector->input_at(node, 0);
@@ -2528,7 +2528,7 @@ void VisitAtomicBinOp(InstructionSelectorT<Adapter>* selector,
 template <typename Adapter>
 void VisitPairAtomicBinOp(InstructionSelectorT<Adapter>* selector,
                           typename Adapter::node_t node, ArchOpcode opcode) {
-  using node_t = Adapter::node_t;
+  using node_t = typename Adapter::node_t;
   IA32OperandGeneratorT<Adapter> g(selector);
   node_t base = selector->input_at(node, 0);
   node_t index = selector->input_at(node, 1);
--
2.36.0.windows.1

